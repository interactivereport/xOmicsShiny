[["index.html", "xOmicsShiny: an R shiny application for cross-omics data analysis and pathway mapping Preface", " xOmicsShiny: an R shiny application for cross-omics data analysis and pathway mapping Benbo Gao Biogen benbo.gao@biogen.com Yu (Henry) Sun Biogen yuhenry.sun@biogen.com Xinmin Zhang BioInfoRx xinmin@bioinforx.com Tinchi Lin Biogen tinchi.lin@biogen.com Wei Li BioInfoRx weili@bioinforx.com Romi Admanit Biogen romi.admanit@biogen.com Baohong Zhang (Corresponding Author) Biogen baohong.zhang@biogen.com These authors contribute equally, Benbo Gao, Yu (Henry) Sun 2025-01-31 Preface This is a user manual written using Bookdown, which provides a detailed guide for xOmicsShiny. Cover Image: Overview of the xOmicsShiny modules. The Shiny application handles multi-omics data including transcriptomics, proteomics, metabolomics, and lipidomics data. The Data Merging (Grey) module integrates multi-omics data for downstream analysis. Data exploration modules (Blue) contain QC, DEGs, Heatmap, Expression, and Venn Diagram modules. Geneset Enrichment (Green) module performs GSEA and pathway analysis. Network modules (Bisque) include WGCNA, Correlation Network, and PCSF modules. Pattern and trend analysis (Orchid) consists of Pattern, Dose Response, Time Course, and Monotonic Trend modules. "],["introduction.html", "Chapter 1 Introduction", " Chapter 1 Introduction xOmicsShiny demo version can be accessed via the link https://xomicsshiny.bxgenomics.com/. XOmicsShiny is an R shiny application for cross-omics data analysis and pathway mapping. RNAseq, Proteomics and metabolomics data are supported in both individual and integrated way to visualize statistical analysis results. In order to support metabolomic data, we have built a metabolite database by combining multiple databases and building look-up tables across various ID formats. There are over 263K unique metabolites extracted from databases Pubchem, KEGG, HMDB, SMPDB, Metabolomic Refmet. etc. This tutorial provides a detailed guide on using the different functionalities and customizing the tools to best fit data analysis and plotting needs, using published multiomic dataset as examples (Williams et al., 2022). The main interface consists of two tabs: Dataset and Setting. The Dataset page features a multi-tab menu for various functionality modules. Before loading a dataset, the default tabs include Select Dataset, four tabs displaying dataset information, and a Help tab explaining the sub-tab functions. The Setting page lists all available functional modules. Users can select or deselect individual modules by clicking on the module icon, which displays a text prompt on hover. Selected module names will be added as tabs in the multi-tab menu on the Dataset page. "],["installation.html", "Chapter 2 Installation 2.1 Set up R environment 2.2 Set up configure files 2.3 Set up gene sets 2.4 Metabase Users", " Chapter 2 Installation 2.1 Set up R environment We recommend using the renv package to create the environment for xOmicsShiny. We have included a R4.2.2 renv.lock file in GitHub for you to set up renv environment. Below are example codes to set up renv. Copy the renv.lock file to your project folder, and go to the project directory (from R command or from R Studio), run the following code. renv::status() #the next three lins are optional, but may help speed up the installation process rHome &lt;- R.home() renv::init(bare=T,settings=list(external.libraries=file.path(rHome,&quot;library&quot;)),restart=T) options(renv.config.install.transactional = FALSE) renv::restore() If there are packages that failed to install, most likely certain programs are missing on your system, please read the error message and try to install the programs, then come back to R to install the packages. (Not recommended), alternatively, you can try to install all the packages manually from R command line in your system. cran_packages=c(&quot;shiny&quot;, &quot;shinythemes&quot;, &quot;shinyalert&quot;, &quot;shinyjqui&quot;, &quot;shinyjs&quot;, &quot;coop&quot;, &quot;cluster&quot;, &quot;devtools&quot;, &quot;plotly&quot;, &quot;reshape2&quot;, &quot;tidyverse&quot;, &quot;gplots&quot;, &quot;ggpubr&quot;, &quot;svgPanZoom&quot;, &quot;WGCNA&quot;,&quot;drc&quot;, &quot;heatmaply&quot;,&quot;dendextend&quot;, &quot;gridExtra&quot;, &quot;ggrepel&quot;, &quot;RColorBrewer&quot;, &quot;pheatmap&quot;, &quot;rgl&quot;, &quot;car&quot;, &quot;colourpicker&quot;, &quot;VennDiagram&quot;, &quot;factoextra&quot;, &quot;openxlsx&quot;, &quot;visNetwork&quot;, &quot;cowplot&quot;, &quot;circlize&quot;, &quot;svglite&quot;, &quot;Hmisc&quot;, &quot;ggrastr&quot;, &quot;ggpmisc&quot;,&quot;ggprism&quot;,&quot;parallel&quot;, &quot;ggExtra&quot;, &quot;networkD3&quot;, &quot;vctrs&quot;, &quot;ragg&quot;, &quot;textshaping&quot;, &quot;stringi&quot;, &quot;plyr&quot;, &quot;png&quot;, &quot;psych&quot;, &quot;broom&quot;, &quot;rclipboard&quot;) #Note: Hmisc is not required to run the Shiny app but is needed to prepare network data from expression matrix. install.packages(cran_packages, repos=&quot;http://cran.r-project.org/&quot;) #choose repos based on your location if needed if (!requireNamespace(&quot;BiocManager&quot;, quietly = TRUE)) install.packages(&quot;BiocManager&quot;) BiocManager::install(c(&quot;Mfuzz&quot;, &quot;biomaRt&quot;, &quot;ComplexHeatmap&quot;, &quot;pathview&quot;, &quot;fgesa&quot;, &quot;org.Hs.eg.db&quot;, &quot;org.Mm.eg.db&quot;, &quot;org.Rn.eg.db&quot;)) #install PCSF devtools::install_github(&quot;IOR-Bioinformatics/PCSF&quot;, repos=BiocInstaller::biocinstallRepos(), dependencies=TRUE, type=&quot;source&quot;, force=TRUE) 2.2 Set up configure files The config.csv in the project folder is required by the system. We have included an example configure file in GitHub. You can modify the file to fit your system. server_dir: the directory to hold project Rdata files which can be loaded in the URL as ?server_file=project_ID test_dir: Not use, can ignore gmt_file_info: the csv file listing all the gmt files used in gene set enrichment. See below for more details. (Optional) If you have a list of data files for the system to display as “Saved Projects in CSV file”, save the RData is data/ folder under the project folder, and include a file called saved_projectsNEW.csv in the data/ folder. See the example saved_projectsNEW.csv on GitHub. 2.3 Set up gene sets We recommend downloading human and mouse gene sets from MSigDB to be used in xOmicsShiny. For rat and other species, one can use the msigdbr package to get the gene set GMT files. We have included a small list of gene sets in GitHub for demo purposes. You can include the full set in your local system. We used gene symbols in the GMT files. Custom gene set files can be easily added as well. The gmt_file_info parameter from the configure.csv points to a csv file (db/db_gmt_files.csv) that lists the gene set files to be loaded into the system. Please see the example on GitHub. You need to modify this file after you add any new GMT files in order for them to show up in the menu. The last column in this file “Show” controls whether a GMT file is used or not in the system. The short_name and label_name are displayed as the gene set name in the menu. 2.4 Metabase Users If you have metabase subscription, you can add the metabase pathways in the Gene Set Enrichment tool. First, install the metabaser package following the instruction from vendor so the system can display metabase pathways. Also prepare file db/metabase_config.RData where you save the connection parameters to metabase, including the following variables: bname, uid, pwd, host, port, type, driver. Next prepare a GMT file of all the metbase pathways and save it as db/human/metabase_maps_genesymbols.gmt, and update the db/db_gmt_files.csv. The presence of file db/human/metabase_maps_genesymbols.gmt will trigger the system to turn on metabase functions. library(metabaser) maps &lt;- load.ontology(&#39;maps&#39;, type=&#39;gene&#39;) ##Export maps using human HGNC gene symbols mapsg &lt;- lapply(maps, get.genesymbol) metabaser:::export.gmt(mapsg, file = &#39;metabase_maps_genesymbols.gmt&#39;) "],["dataset-module.html", "Chapter 3 Dataset Module 3.1 Select Datasets 3.2 Sample Table 3.3 Result Table 3.4 Data Table 3.5 Protein Gene Names 3.6 Help", " Chapter 3 Dataset Module 3.1 Select Datasets This first module is for selecting dataset. Users can either select from pre-loaded example datasets or upload their own dataset in a pre-defined format as detailed in section 3.1.2. 3.1.1 Saved Projects in CSV file We have pre-loaded 11 datasets from published studies that users can use for demonstrative purposes. These includes five studies: Study DataSets References Cx3cr1-Deficient Mouse Microglia RNA-Seq Demo Data Mouse Microglia RNA Gyoneva et al., 2019 LRRK2 Human Neuron Transcriptome and Proteome Data LRRK2 Neuron RNA and Proteome Connor-Robson et al., 2019 Human Brain (Cortex/ACG) Proteome in AD and PD by Maxquant and proteome discoverer ADPD_cortex_Maxquant, ADPD_ACG_Maxquant, ADPD_cortex_Pdiscover, ADPD_ACG_Pdiscover Ping et al., 2018 Mouse AgingHFCD RNA, Proteomic and metabolomic Data AgingHFCD_RNAseq, AgingHFCD_Proteomics, AgingHFCD_Metabolomics Williams et al., 2022 StrokeBrain_TimeCourse Data StrokeBrain_TimeCourse Gu et al., 2021 3.1.2 Upload Data Files (csv) and Upload RData File The xOmicsShiny tool accept two methods of data uploading, which is exactly the same requirement as uploading the data set to our previously developed tool QuickOmics. Please check the section 2.1 and 2.2 of the QuickOmics tutorial. When the dataset is uploaded successfully, the dataset name is shown in the left under the Change Working Dataset menu and an overview is shown in the right of all samples in the project by providing a summary from the metadata. This includes information like which species was used, the different comparisons run and total number of samples in each group. It also helps identify how many groups were present in the dataset, like in this project there are 9 different groups that correspond to three age_groups in each of three genotype groups. 3.1.3 Load and Unload datasets Users can load multiple interested datasets. All loaded datasets are listed in the left menu. The selected dataset information is displayed in the right panel of the page. To edit the loaded dataset list, use the Add Another Dataset button in the middle of the page to load more datasets and use the Remove Current Working Dataset button at the bottom of the right panal to remove a dataset. 3.2 Sample Table A sample table with metadata/details appears upon completion of dataset loading. Here we have selected the “AgingHFCD RNAseq” dataset from the previously published paper (Williams et al., 2022) as an example to illustrate all the functionalities. This publication used multiomics data including RNAseq, Proteomic and Metabolomic data to profile the liver transcriptome, proteome, and metabolome in mouse across age (7 to 24 months) and diet (low or high fat) and link molecular variations to metabolic traits. Using xOmicsShiny, we can visualize the original results from the paper, as well as provide novel visualizations to support new results. The Sample Table contains detailed info of all study samples. A total of 291 samples that were sequenced in this project are listed in the table with attributes like sampleid, group, Age_Group and Treatment, shown in different columns. 3.3 Result Table This tab contains statistical analysis results like UniqueID (Ensemble ID or Gene Symbol for RNAseq data, Accession ID for proteomics data, KEGG compound ID for metabolomic data), gene name, mRNA or protein abundance (count or intensity), mean and SD values for each group, log2 fold change, P value and adjusted P value for each comparison. 3.4 Data Table The Data table contains normalized expression values (TPM for RNAseq, intensity for label free proteomic quantification, or ratio for isobaric label proteomics quantification) per sample for each gene. In Quickomics version 2.0, we added “Download all” button for small tables, and enable “Save to output” button for large tables. 3.5 Protein Gene Names This tab contains all quantified gene or protein IDs and gene names. If it is a metabolomic dataset, the table lists the KEGG compounnd IDs. 3.6 Help Finally, the Help feature summarizes what data is being displayed in each tab under Select Dataset. The Help tab is available for all sections of the subsequent analysis. "],["groups-and-samples-module.html", "Chapter 4 Groups and Samples Module 4.1 Select gourps and samples", " Chapter 4 Groups and Samples Module Sometimes users are interested in just some of the samples for analysis. The Groups and Samples module can be used for the sample inclusion or exclusion. It provides a wide range of flexibility to select groups and samples by clicking and dragging them in a interactive manner. Users can select samples based on metadata, comparison, or manual list. The selected samples are used globally for all plots. 4.1 Select gourps and samples Here, you can define your sample groups and modifying the samples to be included or excluded. It is also flexible to re-order the samples. "],["qc-plots-module.html", "Chapter 5 QC Plots Module 5.1 PCA Plot 5.2 Covariates 5.3 AlignQC 5.4 Sample-sample Distance 5.5 Dendrograms 5.6 Box Plot 5.7 CV Distribution 5.8 Help", " Chapter 5 QC Plots Module The QC Plots module performs basic QC analyses, as described in following paragraphs, on an uploaded dataset to evaluate integrity and quality of the data. The plots were generated using ggplot, plotly, ComplexHeatmap and pheatmap R packages. 5.1 PCA Plot 5.1.1 PCA Plot The principle component analysis (PCA) plot displays, by default, the first 2 PC’s in the dataset and colors study groups with “none” selected in shape and size settings. This plot is highly customizable. Users can change the display by annotating the plot with different colors, shapes, size scheme, as well as label selected subsets data points. To illustrate the strengths of customization, we changed a few display elements, including labeling Treatment by shape (red rectangle boxes), showing ellipsoid (blue rectangle boxes and arrows) and showing marginal rugs (green rectangle boxes) as shown below to visualize the influence of Age and Treatment on sample clustering: These changes results in a PCA plot that showed that both Age and Treatment played some moderate effect that drives small separation among the groups although most of the samples are in a overlapped region. The Ellipsoid feature helps group samples by the color attribute, while the Marginal Rug feature helps understand the sample distribution along the axis. Furthermore, the plot can be saved in high resolution by clicking on “Save to Output”. Section 19 of this document describes the next steps of downloading and obtaining the saved plots. 5.1.2 Eigenvalues By default, the PCA plot displays PC1 and PC2 as described in Section 5.1. However, in many cases other PC’s may be important in explaining additional variance in the dataset. This sub-tab generates a plot of the variances versus the first 10 PCs in the dataset, enabling Users to make educated decisions of which PCs to plot in 2D scatter plot. In this dataset PC1 and PC2 together explain around 33% of the variance. PC2 and PC3 were used to redo the PCA plot, but here the factors driving the separation of the samples is not as clear although we can see that the samples in the Old group are more spreading out. 5.1.3 PCA Loading Table A PCA loading table for RNA-Seq data displays the loadings of each gene, which are the unit eigenvectors scaled by the square root of the eigenvalues. Genes with large positive or negative loadings have the greatest influence on the direction of the principal component. By comparing loadings across principal components, one can identify the genes that account for the most variation in the data. By turn on the function to “Show PCA Loading”, users can see the top contributing genes in the PCA plot. You can see that the top 5 genes in the PCA plot are consistent with the top 5 genes in the sorted PCA Loading table. 5.1.4 PCA 3D Plot This sub-tab contains a way to perform 3D PCA representation. The functionality is limited to doing so only on PC1, PC2 and PC3. Users can zoom in and out to focus on different areas of the plot or rotate the plot in different axes to find the best separation by age as shown below. There are 5 attributes that can be changed: maximal number of principal components, color by group, ellipsoid inclusion, labels of the samples and color scheme. The “Plot Ellipsoid” attribute was changed in the following plot. This highlights the boundaries of sample groups. 5.1.5 PCA 3D Interactive This tab is similar to the previous one (5.4 PCA 3D Plot), but here users have the additional capability to hover over the samples on the plot to identify more details, see the pointer below. This was implemented through the plotly package in R. Users can change 4 attributes here: maximal number of principal components, color by group, shape by group, and color scheme. In the plot below, the “Color By” and “Shape By” attributes have been changed to highlight the check the group separation. 5.2 Covariates The Covariates tab provides flexibility to visualize the covariates, such as Age_group, group, and Treatment showing here. Users can also adjust the covariates and cutoffs on the left and click “Compute/Refresh” to show the result table. The table contains several columns including the Significance, p-value, and FDR for each covariates listed. There are two other tabs of Categorical Covariates and Numerical Covariates, which showed the box plots of the significant PC-covariants pairs with the covariate groups as the x-axis and PC scores as the y-axis. 5.3 AlignQC The AlignQC tab contains several sub-tabs to visualize the QC metrics of the alignment step. Here, we can check the ‘Top Gene Ratio’, ‘Top Gene List’, ‘Mapped Read Allocation’, or ‘Plot Other Variables’ across samples if the selected dataset contains the information. More details can be adjusted on the left panel, such as the height, width, and font size of the plot. The ‘Save to output’ function can add the current plot in the output list. 5.4 Sample-sample Distance This tab helps identify pair-wise similarity between all samples. A distance matrix is generated for every sample pair and is plotted as a heatmap. The rows and columns are clustered based on similarity. Here we use the Mouse microglia RNA-Seq dataset, which was demoed in the QuickOmics tutorial and showed clearly samples of the same Age have the smaller distances, that is, they have closer gene expression patterns. Here again, users have the option to save to output. 5.5 Dendrograms Like the previous plot (5.4 Sample-sample Distance), the Dendrogram plot helps visualize hierarchical clustering relationships between samples. The Default plot is Circular and cut into four parts. Users have the option to visualize in two other ways (tree or horizontal) and cut the plot in multiple regions. Here again, users can save the plot to output. In the plot below, we have selected to visualize as a tree and cut into eight parts. This shows the relationship between the samples to help understand the hierarchal clustering. Overall, the samples are arranged by age, but there are some outliers that appear. It is also interesting how the 2mo samples cluster with the 1yr samples. 5.6 Box Plot The Boxplot is a visualization to understand the distribution of the normalized expression levels in all samples. This identifies the minimum, first quartile, median, third quartile, and maximum values in the dataset. In this demo dataset, most of the samples have the same range of expression, indicating that there are no outliers. 5.7 CV Distribution This plot shows the histogram of CVs (coefficient of variation) and a dotted line for each group indicates the median CV. In this dataset, the 2mon_KO samples have the highest CV while the 2yr_Het samples have the lowest variability. 5.8 Help The Help section describes each tab of the QC Plot and what is being visualized. For further help please visit the GitHub containing the source code for this tools (https://github.com/interactivereport/xOmicsShiny). "],["deg-module.html", "Chapter 6 DEG Module 6.1 DEG Counts 6.2 Volcano Plot (Static) 6.3 Volcano Plot (Interactive) 6.4 DEGs and DEPs in Two Comparisons 6.5 Mulitple Volcano Plots", " Chapter 6 DEG Module This section is designed to explore the differentially expressed genes (DEGs) and differentially expressed proteins (DEPs) in the selected dataset. The comparisons are defined by the User when they input the datasets. Please refer to our GitHub for more details on uploading datasets. The “Volcano Plot (Static)” described in Section 6.2 and “Volcano Plot (Interactive)” described in Section 6.3 are ways to visualize each pair-wise comparison one by one. “DEGs/DEPs in Two Comparisons” described in Section 6.4 is a novel way to visualize the similarities and differences in two comparisons. Finally, “Multi Volcano Plots” can plot comparisons across experiments for visual inspections. 6.1 DEG Counts DEG Counts tab provides a summary of the number of significantly changed genes for each comparison, separating Up- and Down-regulated genes. Use the left menu to select which dataset to view DEG counts, and the log2FC and p-value/FDR cutoff to call DEGs. 6.2 Volcano Plot (Static) This plot reveals the differentially expressed genes provided in the input data file. By default, the Fold change Cutoff is set to 1.2 and the P value Cutoff is set to 0.01. Users have the option to change any of these parameters. For more advanced display options, they can set the “Show More Options” to “Yes” to customize other settings. The red dots are indicative of all genes that pass the Fold Change and P value cutoff, while the green dots are indicative of genes that only pass the P value cutoff. Fifty random genes are labelled for both the up-regulated and down-regulated genes by default. If there are extreme values in the data such as very small p-values or very large fold changes, the volcano plot may not look nice. In such cases, you can adjust the max log2FC and Max -log10(Pvalue) to force the extreme values to fit into max values. Instead of DEGs, one can highlight selected genes in the volcano plot. For example, we selected KEGG pathtway hsa100 Steroid biosynthesis genes, and the plots shows that most of these genes are down-regulated. 6.3 Volcano Plot (Interactive) This Volcano plot can also be shown as an interactive plot, which has the additional capability where users can hover over a particular dot/gene on the plot to see more details. Users can also zoom in to a specific region to view more details if needed. 6.4 DEGs and DEPs in Two Comparisons This next tab helps with identifying DEGs/DEPs that follow a similar trend in two comparisons. xOmicsShiny allows using to perform this comparison across datasets. In the example below, we plotted change genes (from RNA-Seq) and proteins (from proteomics) in high fat vs. control diet in old mice. It can seen that protein and mRNA levels follow the same trend for most geness, and the correlation between the two Omics datasets is 0.438. 6.5 Mulitple Volcano Plots This tab lets the users view the changed genes/proteins/metabolites in volcano plots across multiple comparisons. Here we show the RNA-Seq, proteomics and metabolite data for high fat vs. control diet comparison in old mice. "],["heatmap-module.html", "Chapter 7 Heatmap Module 7.1 Static Heatmap Layout 1 7.2 Static Heatmap Layout 2 7.3 Interactive Heatmap", " Chapter 7 Heatmap Module This module generates highly customized publication-quality heatmaps with the ComplexHeatmap package in R. Users can enter automated list of differentially expressed genes or enter a custom list of genes to highlight on the heatmap. This module differs from other modules in that each time Users change the attributes; they need to click on the “Plot/Refresh” button to generate the plot. This is to avoid changing the output before all the attribute are added. 7.1 Static Heatmap Layout 1 The “Static Heatmap Layout 1” uses the ComplexHeatmap package (Gu et al., 2016) for generating the plot. For demo purposes, we have selected options that highlight some capabilities to generate informative heatmap. For gene selection the default option is the selection of 100 random genes which can also be changed to variable genes. Here we selected DEGs/DEPs from the RNAseq_HFvsCD_old comparison. Users also have the option to change the cutoff criteria for filtering the genes. They can also add/remove annotation categories for the samples on the columns. In this heatmap, the top up-regulated genes in Old_HF samples are seen as high in Old_HF samples only, while the top up-regulated genes in the Young_CD samples are also high in the Old_CD or Young_HF samples. This pattern suggests that both Age_Group and Treatment has some effect on gene expression, and they showed interactive effect on gene expression too. 7.2 Static Heatmap Layout 2 The “Static Heatmap Layout 2” uses the heatmap.2 function from the gplots package for generating the plot. Here is a demo of the same set of genes with dendrograms for both rows and columns. 7.3 Interactive Heatmap The “Interactive Heatmap” uses Plotly for generating the plot. Users can check the detailed data information by mouse-over the data point in the heatmap. THe heatmap can be zoomed using the function buttons located at the upper-right corner of the plot area. "],["expression-plot-module.html", "Chapter 8 Expression Plot Module 8.1 Set up options 8.2 Data Table 8.3 Result Table 8.4 Rank Abundance Curve 8.5 Laser Capture Microdissection", " Chapter 8 Expression Plot Module This functional module allows users to browse through a subset of genes/proteins/metabolites. It also offers an option to plot expression of individually selected genes/proteins/metabolites. Four different displays: Box Plot, Bar Plot, Violin Plot and Line Plot are made available to fit the users’ preference. Genes/proteins/metabolites can be ranked by p-value or logFC, and the number of columns in the graph can be changed. 8.1 Set up options The set up panel contains a few plotting options for data selection and visualization. It consists of dataset selection, data point selection, plot type, plot display parameters. This tab lets the users plot out the expression of the DEGs/DEPs identified in the different comparisons. In this example below, we demonstrate how to display a few top genes using different types of plots. 8.2 Data Table This sub-tab lists the normalized expression data of the genes/proteins/metabolites selected from the left menu as a searchable table. 8.3 Result Table This tab lists the statistics results of the genes/proteins/metabolites selected selected from the left menu as a searchable table. Each comparison defined is probed for the genes/proteins/metabolites in the list and the P value and Fold changes are listed 8.4 Rank Abundance Curve This functionality helps identify the relative abundance of a list of genes within a dataset. This plot helps interpret the distribution of abundance and expression levels of a set of genes. A steep gradient indicates the genes are very different in their expression levels as the high-ranking species have much higher abundances than the low-ranking species. A shallow gradient indicates that the genes have very similar expression levels as the abundances of different species are similar. 8.5 Laser Capture Microdissection This functionality helps to check the gene expression arranged in the order of the sliced spatial samples. With the reference of the spatial sample image, users can check the gene expression side-by-side or in an overlap manner. Here we show the tool with our simulated data set LCM_Simulated. "],["gene-set-enrichment-module.html", "Chapter 9 Gene Set Enrichment Module 9.1 Gene Set Enrichment Analysis (GSEA) 9.2 Over-Representation Analysis (ORA) 9.3 Gene Expression 9.4 Gene Set Heatmap 9.5 KEGG Pathway View 9.6 WikiPathway View", " Chapter 9 Gene Set Enrichment Module This functionality is an extension to the differential gene identification. Users are able to use different cutoffs to filter out DEGs/DEPs/DEMs in different comparisons and probe enriched pathways. This is a useful way to make biological sense of the data. Two types of the enrichment analysis are available: gene set enrichment analysis and over-representation analysis. Beyond the standard Gene Set Enrichment Analysis, users can upload RNA, protein or metabolic data alone, or together with each other, and our system can perform combined multiomics molecular set enrichment analysis, and highlight the data on KEGG pathways showing all changed genes/proteins and metabolites. Pathway heatmap is also available to visualize enriched pathways across experiments. 9.1 Gene Set Enrichment Analysis (GSEA) This first tab allows users to select a specific comparison, choose a species pathway database, set statistical cutoff criteria for the analysis, and select gene set databases from a list of different databases for gene set enrichment analysis (GSEA). The result table displays the ranked GSEA summary. The entries in the first column, GeneSet, are clickable. Clicking on a gene set name opens the third tab, Gene Expression, which shows detailed results for the selected gene set. 9.2 Over-Representation Analysis (ORA) This tab allows users to test a gene list by either selecting a specific comparison with predefined cutoffs or providing a customized gene list. Users can then choose a species pathway database, set statistical cutoff criteria for the analysis, and select gene set databases from a list of options for over-representation analysis (ORA). When using a gene list selected from a comparison with cutoffs, the result summary table reports the numbers of total DEGs, up-regulated DEGs, and down-regulated DEGs present in each gene set. The first column GeneSet entries in the table is clickable and links to the 3rd tab Gene Expression and show the detailed result of the selected gene set. When using a customized gene list, no comparison data is retrieved, so the result summary table reports only the number of total DEGs present in each gene set. 9.3 Gene Expression For the enriched gene sets identified in the previous tabs (GSEA and ORA), users have the ability to look at the differential values of the genes present in the set. Here we are probing the Naba matrisome associated gene set reported in the reference to show significant difference between the high-fiber and control-diet groups in aged group. The page looks a bit different for the ORA analysis result. It does not have the enrichment plot. 9.4 Gene Set Heatmap Like the Gene Expression tab, users have the ability to plot expression of the genes in the pathway term selected as a heatmap. The plot can use all the genes in the gene set or just the leading/DE genes.This visualization shows that almost all the Naba_matrisome-associated DE genes are highly expressed in Old_HF group. 9.5 KEGG Pathway View This functionality is available only to KEGG pathway terms. Users have the option to view the Fold Change levels of different genes in the KEGG pathway map. If only one type of source comparison is used, users can select for up to 5 comparisons. Or users can select a comparison from different data sources (RNAseq, proteomics or metabolomics data). In this example we demo the KEGG pathway “mmu05230 central carbon metabolism in cancer” as identified as top 1 gene set in the Metabolite_HFvsCD_Old comparison. 9.6 WikiPathway View This functionality is similar to the “KEGG Pathway View” but it is for the gene set visualization in the WikiPathways database. In this example we demo the Wiki pathway “Cholesterol biosynthesis WP103” as identified as top 2 gene set in the RNAseq_HFvsCD_Old comparison. It clearly shows that all the genes in the gene set are down-regulated in the high-fiber group. "],["pattern-clustering-module.html", "Chapter 10 Pattern Clustering Module 10.1 Clustering of Centroid Profiles 10.2 Optimal Number of Clusters 10.3 Data Table", " Chapter 10 Pattern Clustering Module This functional module in xOmicsShiny helps cluster genes/proteins/metabolites based on their expression/measurement profiles across different sample groups. Three different algorithms, soft (fuzzy) clustering, k-means and partitioning around medoids (PAM), are implemented. 10.1 Clustering of Centroid Profiles Users can choose to select DEGs/DEPs/DEMs as the list of genes/proteins/metabolites for clustering (subset), upload a custom gene list (upload genes), or select a gene set (Geneset). When the subset option is chosen, DEGs/DEPs/DEMs are selected based on all comparisons, and cutoffs can be applied to limit the number of genes. In the example below, we use the top DEGs and DEPs with a fold change cutoff of 1.5 and an adjusted p-value cutoff of 0.05 to identify four clusters of genes in the AgingHFCD_RNAseq data set. Soft clustering differs from hard clustering in that clusters can overlap. This means elements, such as genes, proteins, or metabolites, can be grouped into more than one cluster if the data are not well separated. Each element is assigned a membership value for each cluster it belongs to. These membership values indicate how well the element is represented by a specific cluster. Low values indicate poor representation, while high values indicate a strong correlation with the cluster centroid. K-means clustering is a hard clustering algorithm. With a pre-defined number of centroids (same number of clusters), it allocates every data point to the nearest cluster. partitioning around medoids clustering is another hard clustering. It differs from K-means clustering in that it uses the real data point as the medoids and it’s less sensitive to the outliers. This algorithm is more complex and takes longer time than K-means clustering. 10.2 Optimal Number of Clusters This functionality helps users to determine the optimal number of clusters. Three different methods, silhouette (average silhouette), wss (within cluster sums of squares) and gap_stat (gap statistics), are provided. For silhouette method, the optimal number of clusters are the X-axis value that shows the maximum Y-axis value (silhouette coefficient). For wss method, the optimal number of clusters can be determined by the location of a bend(knee) in the plot. For gap_stat methods, the optimal number of clusters can be chosen as the smallest value of k such that the gap statistic is within one standard deviation of the gap at k+1. Sometimes the gap function starts to rise again after dropping as k increase, which indicates the data has subclusters within the larger main clusters. 10.3 Data Table The data table contains genes/proteins/metabolites from the previous clusters, along with their expression/measurement values. "],["wgcna-module.html", "Chapter 11 WGCNA Module 11.1 Dendrogram 11.2 Gene Clusters", " Chapter 11 WGCNA Module This module is implemented by the WGCNA R package, which is a tool to build weighted gene correlation networks for expression data. The module contains two functional tabs: Dendrogram and Gene Clusters. 11.1 Dendrogram If the data set is a the saved projects in the CSV file, the precomputed results will be directly loaded based on up to 10,000 genes with default parameter values. For other data set or if the user want to re-run WGCNA on the saved project with a different parameter or number of genes, just click ‘Re-run’ and wait for a few minutes, the results will show up once the analysis is done. 11.2 Gene Clusters This tab shows a searchable table that listing all the genes for each cluster. User can use the copy button to get the complete gene list of cluster and check with other tools, for example, Heatmap. "],["correlation-network-module.html", "Chapter 12 Correlation Network Module 12.1 visNetwork 12.2 networkD3 12.3 Selected Ids Data Table 12.4 Correlation Summary", " Chapter 12 Correlation Network Module This module helps build co-expression networks based on gene-gene, protein-protein or metabolite-metablote correlations. This is especially useful during co-immunoprecipitation or pulldown proteomics experiments to identify protein partners. Users have the ability to enter 1 or more genes/proteins to identify if their expression is correlated. If users has the interested candidates to check, please check the cisNetwork or networkD3 result directly. If users need the tool to provide the correlation network information, please check the Correlation Summary tab, which providing the whole list of genes/proteins/metablites that has correlated genes/proteins/metablites. 12.1 visNetwork This functionality uses the R package visNetwork to visualize the expression of correlated genes/proteins/metablites. Users have the ability to choose the R and P value cutoff for selecting the correlated genes/proteins. P.Value is the Pearson’s correlation test p-value for each pair of the genes/proteins/metablites. Adj.P.Value is the adjusted p-value obtained using Benjamini-Hochberg method. In this example below, we probe 3 genes and identify the expression of other genes that are correlated with them. The following network plot was produced. Mup15 is part of a large network with multiple genes correlated with it. On the other hand, A1bg was correlated with 2 other genes, while Gpc1 was not correlated with any genes. Larger nodes (genes/proteins/metablites) indicate higher importance within the network. Thicker edges (lines connect the nodes) represent stronger connections between nodes. 12.2 networkD3 This functionality uses the R package d3Network for creating D3 network graphs. Use the same setup, networkD3 show the following results. 12.3 Selected Ids Data Table Here is a table here showing the correlation results of the genes/proteins/metablites selected in the previous tabs. Correlation coefficient, p-value, adjusted p-value and correlation direction are reported for each pair of genes/proteins/metablites. Users can perform searches and sort based on correlation statistics. 12.4 Correlation Summary The correlation test results for all genes/proteins/metabolites with a correlation coefficient greater than 0.7 are listed in this table. The number of correlated genes/proteins/metabolites is reported both before and after multiple testing adjustments. "],["venn-diagram-module.html", "Chapter 13 Venn Diagram Module 13.1 Venn Diagram 13.2 Intersection Output 13.3 UpSets 13.4 UpSets Table", " Chapter 13 Venn Diagram Module This module in xOmicsShiny helps users identify DEGs/DEPs/DEMs that are common or unique to different comparisons within one project. Users have the option to either visualize these DEGs/DEPs/DEMs as a highly customizable Venn Diagram (5 or less groups) or UpSets plot, or download a table with the gene/protein/metabolites names/IDs. 13.1 Venn Diagram To view the DEGs/DEPs/DEMs as a Venn Diagram, users have the option to see the intersection of DEGs/DEPs/DEMs for up to 5 different comparisons. Users can also use all DEGs/DEPs/DEMs or restrict it to the ones that are Up or Down regulated. 13.2 Intersection Output This tab lets the User view the individual genes that were present in the Venn Diagram and the distribution of the genes in intersection regions. 13.3 UpSets When there are many comparisons, UpSets plot is often used to show the grouping combinations. The dots and dot connected lines indicates the group combination and the bar plot shows the numbers of each combination. There are 3 combination modes available to make the plot: intersect, distinct and union. The distinct mode produces the result that are equivalent to the numbers in the Venn Diagram. 13.4 UpSets Table Here it shows the table that listing all the combination groups with the number of count and all the DEGs/DEPs/DEMs in each combination group. "],["pcsf-module.html", "Chapter 14 PCSF Module 14.1 PCSF network 14.2 PCSF Function Cluster", " Chapter 14 PCSF Module The PCSF package performs fast and user-friendly network analysis using Prize-collecting Steiner Forest (PCSF) algorithm of high-throughput data by mapping the data onto a biological networks such as gene-gene, protein-protein interaction or any other correlation or coexpression based networks. Using the existing gene set or pathway database as a template, it determines high-confidence subnetworks relevant to the data, which potentially leads to predictions of enriched gene sets or pathways. This module has 2 functional tabs: PCSF network and PCSF Function Cluster. 14.1 PCSF network This tab shows the results of the computed high-confidence subnetwork relevant to the input data. 14.2 PCSF Function Cluster This tab shows the interactive version of the annotated subnetwork. The node sizes and edge widths are proportional to the amount of times that node or edge appeared in the computation process. Nodes are colored by the clusters. Users can use mouse to click on a node in a cluster to view the table listing the top 15 functional enrichment pathways for the cluster which was calculated by the over-representation analysis(ORA). Each cluster can be visualized separately by “Select by group” icon located at the upper-left corner of the figure. "],["dose-response-module.html", "Chapter 15 Dose Response Module 15.1 Fitting Curve 15.2 Result Table (all) 15.3 Browsing", " Chapter 15 Dose Response Module This module, along with the Time Course Module and Monotonic Trend Module, is designed to explore and visualize time-course dose-response datasets. In xOmicsShiny, this module helps users create dose-response plots using the drc R package. To demonstrate this functionality, we use the StrokeBrain_TimeCourse dataset. In this dataset, the UniqueID is a combination of Gene.Name and Protein.ID. Other columns include treatment and dose-response measurements. 15.1 Fitting Curve This functionality allows user to make dose response plot for individual genes. It contains 4 sub-tabs. 15.1.1 Fitting Curve The “Fitting Curve” sub-tab displays the dose-response plots. To create these plots, users need to select a model type to fit the data. The final sub-tab, Model Selection, can help in choosing the best model. The default upper limit for all available model types is set to 1. If users wish to use a different value, they can adjust it using the Upper box. 15.1.2 Result Table and Data Table The “Result Table” shows the fitted results in a searchable table, which are shown as labels in the plots. And the “Data Table” shows the original data of the selected gene. 15.1.3 Model Selection The “Model Selection” tab shows the best fitted model(s) with the fitting plots and their test statistics. 15.2 Result Table (all) This tab shows the fitted results in a searchable table for all the genes by default. User can apply filter condition to view the results for the filtered genes only. 15.3 Browsing This tab contains two sub-tabs, allowing users to view the fitting plots and data results of multiple genes on a single page for either filtered or uploaded genes. By default, the “Plot” tab displays the plots for the first 9 genes based on the user’s selected sorting method. The “Table” tab shows the dose-response model fitting results for the genes displayed in the plot tab. Below is an example showing the plots from the filtered results. Users can select their own gene list by using the “Upload Genes” option. Then the Plot tab will show the plots for the uploaded gene list and the Table tab will show corresponding results. The example below shows the plots of the 4 filtered genes in the previous session Result Table (all). If user has done the model fitting to the filtered data in the Result Table (all) tab, then this page shows the plot for the filtered genes. "],["time-course-module.html", "Chapter 16 Time Course Module 16.1 Fitting Curve 16.2 Result Table (all) 16.3 Browsing", " Chapter 16 Time Course Module This module enable users to visualize the dose-response/time-course data. The method is derived from the DRomics R package. Gauss-probit, log-Gauss-probit, Hill, log-probit, exponential, linear regressions are checked during the fitting process. 16.1 Fitting Curve This functionality allows user to make dose-response/time-course plot for individual genes. It contains 3 sub-tabs. 16.1.1 Fitting Curve The “Fitting Curve” tab shows the time-course plots. 16.1.2 Result Table and Data Table The “Result Table” shows the fitted results in a searchable table, which are shown as labels in the plots. And the “Data Table” shows the original data of the selected genes. 16.2 Result Table (all) This tab shows the fitted results in a searchable table for all the genes. User can apply filter condition to view the results for the filtered genes only. 16.3 Browsing This tab allows users to view the fitting plots for multiple genes in a single page. By default the “Plot” tab shows the plot for the first 9 genes in alphabetical order if not filter applied to the data. The “Table” tab shows the result data in the table format for the genes shown in the Plot tab. After filter, the “Plot” tab display the fitted plots for filtered genes only. Users can select their own gene list by using the “Upload Genes” option. Then the Plot tab will show the plots for the uploaded gene list and the Table tab will show corresponding results. "],["monotonic-trend-module.html", "Chapter 17 Monotonic Trend Module 17.1 Fitting Curve 17.2 Result Table (all) 17.3 Browsing", " Chapter 17 Monotonic Trend Module This module enables users to check if the dose-response/time-course effect is monotonic or not. 17.1 Fitting Curve This functionality showed dose-response/time-course plot with linear fitting for individual genes. It contains 3 sub-tabs. 17.1.1 Fitting Curve The “Fitting Curve” tab shows the dose response plots.The example below shows that all 3 plots has very low R-square value, which indicate bad fit. It is very clear that the respone keeps up and down when we change to view “Connecting Dot”. 17.1.2 Result Table and Data Table The “Result Table” shows the fitted results in a searchable table, which are shown as labels in the plots. And the “Data Table” shows the original data of the selected genes. 17.2 Result Table (all) This tab shows the fitted results in a searchable table for all the genes. User can apply filter condition to view the results for the filtered genes only. 17.3 Browsing This tab allow user to view the fitting plots from previous filtered gene list. "],["merge-data-module.html", "Chapter 18 Merge Data Module 18.1 Merge Data 18.2 Data Source", " Chapter 18 Merge Data Module This module enable users to combine different datasets together if they have multiple datasets of the same or similar study and want to check them together. And then the functions that only support single dataset can be used by the merged data. 18.1 Merge Data The comparisons in the pre-loaded data sets can be merged using one of four methods: union, overlap (intersect), distinct, and simple append. Depending on the chosen method, users need to set the Overlapped Datasets cutoff to retain only the genes that appear in a number of comparisons equal or greater than the cutoff. If the merging process involves the same gene from different comparisons, we offer four methods for merging p-values: Fisher (χ²-based method), minP (minimum p-value), Simes (uses ordered p-values to determine significance), and Stouffer (applies the inverse standard normal cumulative distribution function to p-values). Additionally, there are three methods for merging fold change values: average, multiplication, and formula (a linear combination of the fold changes). 18.2 Data Source This tab shows a merged table of merged data set and original data sets. The merged data set can be analyzed using other comparison visualization tool. The example below shows the GSEA analysis result tables for the merged data set. "],["output-module.html", "Chapter 19 Output Module", " Chapter 19 Output Module This final tab in xOmicsShiny is available for users to download plots in high resolution, including for use in publications. Users can save different plots by clicking on “Save to Output” present on the top left corner of the plot during analysis and exploration of the datasets in all previous tabs. Upon clicking on the “Output” tab as seen in the image below, Users can see a list of plots that are available to download to their local machine. "],["introduction-to-multiple-testing-adjustment-in-genomic-data-analysis.html", "Chapter 20 Introduction to Multiple Testing Adjustment in Genomic Data Analysis 20.1 Differentially Expressed Gene (DEG) Analysis 20.2 Over Representation Analysis (ORA) 20.3 Gene Set Enrichment Analysis (GSEA) 20.4 Correlation Network Analysis", " Chapter 20 Introduction to Multiple Testing Adjustment in Genomic Data Analysis Genomic data analysis often involves testing thousands to millions of hypotheses simultaneously, such as identifying differentially expressed genes (DEGs), exploring enriched biological pathways, or constructing gene co-expression networks. Without proper statistical correction, this massive scale of testing leads to a high probability of false-positive results. Multiple testing adjustment methods are therefore essential to control error rates and ensure biological validity. Below, we discuss their applications in three key areas of genomic research: DEG analysis, pathway enrichment analysis, and correlation network analysis. 20.1 Differentially Expressed Gene (DEG) Analysis In DEG analysis, researchers compare gene expression levels across conditions (e.g., disease vs. healthy) to identify genes with significant expression changes. High-throughput technologies like RNA sequencing (RNA-seq) measure expression for tens of thousands of genes, leading to a massive multiple testing burden. For example, at a nominal p-value threshold of 0.05, analyzing 20,000 genes would yield ~1,000 false positives by chance alone. Common approaches include: Family-Wise Error Rate (FWER) control (e.g., Bonferroni correction), which minimizes the probability of any false positives but is overly conservative for genomic data. False Discovery Rate (FDR) control (e.g., Benjamini-Hochberg procedure), which limits the proportion of false positives among significant results. FDR-adjusted p-values (q-values) are widely adopted in DEG analysis. Tools like DESeq2, edgeR, and limma-voom incorporate these adjustments to prioritize biologically meaningful DEGs while reducing false discoveries. 20.2 Over Representation Analysis (ORA) After identifying DEGs, pathway enrichment analysis evaluates whether specific biological pathways (e.g., metabolic or signaling pathways) are over represented among the DEGs. This involves testing hundreds of pathways from databases like GO, KEGG, or Reactome, again introducing multiplicity. Non-adjusted results often highlight generic or overly broad pathways, while adjusted results emphasize robust, context-specific biological mechanisms. ORA analysis uses statistical tests (e.g., hypergeometric test, Fisher’s exact test) to generate p-values for each pathway and it applies FDR correction (e.g., Benjamini-Yekutieli method) to account for dependencies between pathways. 20.3 Gene Set Enrichment Analysis (GSEA) Gene Set Enrichment Analysis (GSEA) is a widely used method to identify coordinated changes in predefined gene sets (e.g., pathways, functional categories) across experimental conditions. Unlike traditional over representation analysis, GSEA evaluates whether genes in a set are enriched at the extremes of a ranked list of genes (e.g., ranked by differential expression). GSEA employs a two-step approach to address multiplicity: permutation-Based significance computed by a nominal p-value and gene set-level False Discovery Rate (FDR) control. 20.4 Correlation Network Analysis Gene co-expression or protein-protein interaction networks are constructed by computing Pearson pairwise correlations across genes or proteins. Raw correlation p-values are adjusted using the Benjamini-Hochberg method for False Discovery Rate (FDR) to retain only statistically significant edges. The visNetwork and networkD3 visualization tools in the correlation network module can display the correlation results before or after multiple testing adjustments, based on the user’s selection. "],["appendix.html", "Chapter 21 Appendix 21.1 Scalability testing 21.2 Feature comparison", " Chapter 21 Appendix 21.1 Scalability testing We tested the scalability of xOmicsShiny using the following example data below. Appendix Table 1: Loading speed test of example datasets. This table shows the number of samples, comparisons, and measurements (genes/proteins/metabolites) in each dataset. The additional columns record the loading speed (in seconds) of the data, time to calculate GSEA (Gene set enrichment analysis) and ORA (Over-representation analysis) results using the KEGG or gene ontology (GO) databases (BP: biological process, CC: cellular component, and MF: molecular function). 21.2 Feature comparison Appendix Table 2: Feature comparison with existing R Shiny applications. Links to the papers involved in the comparison: 1, Gao et al., Quickomics: exploring omics data in an intuitive, interactive and informative manner, Bioinformatics, 2021 2, Munk et al., Holomics-a user-friendly R shiny application for multi-omics data integration and analysis, BMC bioinformatics, 2024 3, Zhao and Wang., GraphBio: A shiny web app to easily perform popular visualization analysis for omics data, Frontiers in Genetics, 2022 4, Zoppi et al., MiBiOmics: an interactive web application for multi-omics data exploration and integration, BMC Bioinformatics , 2021 5, Tien et al., EasyPubPlot: a shiny web application for rapid omics data exploration and visualization, bioRxiv, 2024 "],["references.html", "Chapter 22 References", " Chapter 22 References Cotter,D. et al. (2006) LMPD: LIPID MAPS proteome database. Nucleic Acids Res., 34, D507–D510. Frolkis,A. et al. (2010) SMPDB: The Small Molecule Pathway Database. Nucleic Acids Res., 38, D480–D487. Jassal,B. et al. (2020) The reactome pathway knowledgebase. Nucleic Acids Res., 48, D498–D503. Kanehisa,M. and Goto,S. (2000) KEGG: kyoto encyclopedia of genes and genomes. Nucleic Acids Res., 28, 27–30. Liberzon,A. et al. (2015) The Molecular Signatures Database (MSigDB) hallmark gene set collection. Cell Syst., 1, 417–425. Martens,M. et al. (2020) WikiPathways: connecting communities. Nucleic Acids Res. Subramanian,A. et al. (2005) Gene set enrichment analysis: A knowledge-based approach for interpreting genome-wide expression profiles. Proc. Natl. Acad. Sci., 102, 15545 LP – 15550. The Gene Ontology Consortium (2019) The Gene Ontology Resource: 20 years and still GOing strong. Nucleic Acids Res., 47, D330–D338. Hasin, Yehudit. et al. (2017) “Multi-omics approaches to disease.” Genome biology 18: 1-15. Rabinowitz, Jeremy S., et al. (2017) “Transcriptomic, proteomic, and metabolomic landscape of positional memory in the caudal fin of zebrafish.” Proceedings of the National Academy of Sciences 114.5: E717-E726. Talman, Virpi, et al. (2018) “Molecular atlas of postnatal mouse heart development.” Journal of the American Heart Association 7.20: e010378. Yuan, Qihang, et al. (2022) “Integration of transcriptomics, proteomics, and metabolomics data to reveal HER2-associated metabolic heterogeneity in gastric cancer with response to immunotherapy and neoadjuvant chemotherapy.” Frontiers in Immunology 13: 951137. Li, Xin, Yan Du, and Wence Zhou. (2023) “Integrated transcriptomics, proteomics and metabolomics-based analysis uncover TAM2-associated glycolysis and pyruvate metabolic remodeling in pancreatic cancer.” Frontiers in Immunology 14: 1170223. Williams, Evan G., et al. (2022) “Multiomic profiling of the liver across diets and age in a diverse mouse population.” Cell Systems 13.1: 43-57. Iturria-Medina, Yasser, et al. (2022) “Unified epigenomic, transcriptomic, proteomic, and metabolomic taxonomy of Alzheimer’s disease progression and heterogeneity.” Science Advances 8.46: eabo6764. Kodam, Pradeep, et al. (2023) “Integrated multi-omics analysis of Alzheimer’s disease shows molecular signatures associated with disease progression and potential therapeutic targets.” Scientific Reports 13.1: 3695. Ghosh, Nilanjana, et al. (2016) “Transcriptomics, proteomics and metabolomics driven biomarker discovery in COPD: an update.” Expert review of molecular diagnostics 16.8: 897-913. Sun, Quan, et al. (2019) “Integration of metabolomic and transcriptomic profiles to identify biomarkers in serum of lung cancer.” Journal of Cellular Biochemistry 120.7: 11981-11989. Ren, Shancheng, et al. (2016) “Integration of metabolomics and transcriptomics reveals major metabolic pathways and potential biomarker involved in prostate cancer.” Molecular &amp; Cellular Proteomics 15.1: 154-163. Jang, Yeongjun, et al. (2016)“MONGKIE: an integrated tool for network analysis and visualization for multi-omics data.” Biology direct 11: 1-9. Schultheis, Hendrik, et al. (2019) “WIlsON: web-based interactive omics visualization.” Bioinformatics 35.6: 1055-1057. Brademan, Dain R., et al. (2020) “Argonaut: A web platform for collaborative multi-omic data visualization and exploration.” Patterns 1.7. Ghosh, Soumita, et al. (2021) “multiSLIDE is a web server for exploring connected elements of biological pathways in multi-omics data.” Nature Communications 12.1: 2279. Zhou, Guangyan, et al. (2021) “OmicsAnalyst: a comprehensive web-based platform for visual analytics of multi-omics data.” Nucleic Acids Research 49.W1: W476-W482. Zoppi, Johanna, et al. (2021) “MiBiOmics: an interactive web application for multi-omics data exploration and integration.” BMC bioinformatics 22: 1-14. Liu, Tianyuan, et al. (2022) “PaintOmics 4: new tools for the integrative analysis of multi-omics datasets supported by multiple pathway databases.” Nucleic Acids Research 50.W1: W551-W559. Gu, Zuguang, et al. (2016) “Complex heatmaps reveal patterns and correlations in multidimensional genomic data.” Bioinformatics 32.18: 2847-2849. Gu, Zuguang. (2022) “Complex heatmap visualization.” Imeta 1.3: e43. Korotkevich, Gennady, et al. (2016) “Fast gene set enrichment analysis.” BioRxiv: 060012. Langfelder, Peter, and Steve Horvath. (2008) “WGCNA: an R package for weighted correlation network analysis.” BMC bioinformatics 9: 1-13. Akhmedov, Murodzhon, et al. (2017) “PCSF: An R-package for network-based interpretation of high-throughput data.” PLoS computational biology 13.7 : e1005694. Luo, Weijun, and Cory Brouwer. (2013) “Pathview: an R/Bioconductor package for pathway-based data integration and visualization.” Bioinformatics 29.14: 1830-1831. Gao, Benbo, et al. (2021) “Quickomics: exploring omics data in an intuitive, interactive and informative manner.” Bioinformatics 37.20: 3670-3672. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
